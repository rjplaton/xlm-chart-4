{"ast":null,"code":"var _jsxFileName = \"/Users/reubenplaton/Projects/xlm-chart-4/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ChartBar from './components/ChartBar/ChartBar.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currencies: [{\n        name: 'Bitcoin',\n        abrev: 'btc',\n        price: 0,\n        visible: false\n      }, {\n        name: 'Ethereum',\n        abrev: 'eth',\n        price: 0,\n        visible: false\n      }, {\n        name: 'Litecoin',\n        abrev: 'ltc',\n        price: 0,\n        visible: false\n      }, {\n        name: 'US Dollar',\n        abrev: 'usd',\n        price: 0,\n        visible: false\n      }],\n      maxprice: 0\n    };\n\n    this.onCurrencyToggle = id => {\n      if (this.state.currencies[id].visible === true) {\n        // eslint-disable-next-line\n        this.state.currencies[id].visible = false;\n        this.setState({\n          currencies: this.state.currencies,\n          maxprice: this.state.currencies[id].price\n        });\n      } else {\n        // eslint-disable-next-line\n        this.state.currencies[id].visible = true;\n        this.setState({\n          currencies: this.state.currencies\n        });\n      }\n    };\n\n    this.fetchData = () => {\n      // eslint-disable-next-line\n      for (let currency of this.state.currencies) {\n        fetch(\"https://min-api.cryptocompare.com/data/price?fsym=\" + currency.abrev.toUpperCase() + \"&tsyms=XLM\").then(response => response.json()).then(data => {\n          console.log(data);\n          currency.price = data.XLM;\n        });\n      }\n\n      ;\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    console.log(\"state rendered with this data:\", this.state.currencies);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"https://rjplaton.github.io/stellar-pairings/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"XLM Chart\")), React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Stellar Lumens (XLM) Conversion\")), React.createElement(\"div\", {\n      className: \"sidebar box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"XLM Pairings\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"currencylist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.currencies.map((currency, id) => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: currency.abrev,\n      onClick: () => this.onCurrencyToggle(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), currency.abrev.toUpperCase()))))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"BarChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"How many XLM per...\"), this.state.currencies.map((currency, id) => React.createElement(ChartBar, {\n      currency: currency,\n      rowId: currency.visible === true ? currency.abrev + \"Row\" : currency.abrev + \"Row-hidden\",\n      barId: currency.abrev + \"Bar\",\n      name: \"1 \" + currency.name + \" (\" + currency.abrev.toUpperCase() + \")\",\n      price: currency.price,\n      barStyle: {\n        width: \"calc(\".concat(currency.price, \" / \").concat(this.state.maxprice, \" * 100%)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://github.com/rjplaton/stellar-pairings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Github Repo\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://rjplaton.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Reuben Platon\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/reubenplaton/Projects/xlm-chart-4/src/App.js"],"names":["React","Component","ChartBar","App","state","currencies","name","abrev","price","visible","maxprice","onCurrencyToggle","id","setState","fetchData","currency","fetch","toUpperCase","then","response","json","data","console","log","XLM","componentDidMount","render","logo","map","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport ChartBar from './components/ChartBar/ChartBar.js';\n\nclass App extends Component {\n\n  state = { \n    currencies: [\n          {\n          name:'Bitcoin',\n          abrev: 'btc',\n          price: 0,\n          visible: false,\n          },\n            {\n          name: 'Ethereum',\n          abrev: 'eth',\n          price: 0,\n          visible: false,\n          },\n          {\n          name: 'Litecoin',\n          abrev: 'ltc',\n          price: 0,\n          visible: false,\n          },\n          {\n          name: 'US Dollar',\n          abrev: 'usd',\n          price: 0,\n          visible: false,\n          }\n        ],\n    maxprice: 0,\n\n  }\n\n  onCurrencyToggle = (id) => {\n    if(this.state.currencies[id].visible === true) {\n      // eslint-disable-next-line\n        this.state.currencies[id].visible = false;\n        this.setState({\n            currencies: this.state.currencies,\n            maxprice: this.state.currencies[id].price,\n        });\n        } else {\n      // eslint-disable-next-line\n        this.state.currencies[id].visible = true;\n        this.setState({\n            currencies: this.state.currencies,\n        });\n      }\n\n  }\n\n  fetchData = () => {\n    // eslint-disable-next-line\n    for (let currency of this.state.currencies) {\n    fetch(\"https://min-api.cryptocompare.com/data/price?fsym=\"+currency.abrev.toUpperCase()+\"&tsyms=XLM\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        currency.price = data.XLM;\n      });\n    };\n  }\n\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n\n  render() {\n      console.log(\"state rendered with this data:\", this.state.currencies);\n      return (\n        <div className=\"App\">\n\n          <nav className=\"nav\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <a href=\"https://rjplaton.github.io/stellar-pairings/\">XLM Chart</a>\n          </nav>\n\n<div className=\"wrapper\">\n  <div className=\"header\"><h1>Stellar Lumens (XLM) Conversion</h1></div>\n\n  <div className=\"sidebar box\">\n    <h3>\n      <p>XLM Pairings</p>\n    </h3>\n    <p></p>\n    <div className=\"currencylist\">\n    {\n    this.state.currencies.map( (currency, id) => (\n        <p><span className=\"checkbox\">\n          <input type=\"checkbox\" id={currency.abrev} onClick={() => this.onCurrencyToggle(id)}/>{currency.abrev.toUpperCase()}\n        </span></p>\n      ))\n    }\n    </div>\n  </div>\n\n\n<div className=\"content\">\n<div className=\"BarChart\">\n<h2>How many XLM per...</h2>\n\n          {\n            this.state.currencies.map( (currency, id) => (\n              <ChartBar \n                  currency={currency}\n                  rowId={ \n                    currency.visible === true ? \n                      currency.abrev + \"Row\" \n                      : currency.abrev + \"Row-hidden\"\n                    } \n                  barId={currency.abrev + \"Bar\"}\n                  name={\"1 \" + currency.name + \" (\" + currency.abrev.toUpperCase() + \")\"}\n                  price={currency.price}\n                  barStyle={{width: `calc(${currency.price} / ${this.state.maxprice} * 100%)`}}\n                   />\n            ))}\n</div>\n  </div>\n  \n\n\n  <div className=\"footer\">\n    <a href=\"https://github.com/rjplaton/stellar-pairings\">Github Repo</a>\n    <p>\n    <a href=\"http://rjplaton.com\">Reuben Platon</a>\n  </p>\n    </div>\n</div>\n\n\n        </div>\n      );\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}